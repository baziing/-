from scipy.optimize import fsolve
from scipy.optimize import root
import numpy as np


def solve_function(unsolved_value):
    a,b= unsolved_value[0],unsolved_value[1]
    return [6.4404*a/(b + 180)**2 + 11.3404*a/(b + 179)**2 + 15.1115*a/(b + 178)**2 + 18.4703*a/(b + 177)**2 + 22.3095*a/(b + 176)**2 + 26.7093*a/(b + 175)**2 + 30.5895*a/(b + 174)**2 + 33.5873*a/(b + 173)**2 + 36.2651*a/(b + 172)**2 + 39.1396*a/(b + 171)**2 + 41.0271*a/(b + 170)**2 + 43.9562*a/(b + 169)**2 + 47.1547*a/(b + 168)**2 + 49.8029*a/(b + 167)**2 + 52.3842*a/(b + 166)**2 + 54.8545*a/(b + 165)**2 + 56.4658*a/(b + 164)**2 + 58.6744*a/(b + 163)**2 + 60.8324*a/(b + 162)**2 + 63.0686*a/(b + 161)**2 + 65.1298*a/(b + 160)**2 + 66.9546*a/(b + 159)**2 + 68.598*a/(b + 158)**2 + 70.3053*a/(b + 157)**2 + 71.987*a/(b + 156)**2 + 73.6785*a/(b + 155)**2 + 75.4092*a/(b + 154)**2 + 76.9295*a/(b + 153)**2 + 78.2177*a/(b + 152)**2 + 79.2692*a/(b + 151)**2 + 80.0288*a/(b + 150)**2 + 81.038*a/(b + 149)**2 + 82.1307*a/(b + 148)**2 + 83.4042*a/(b + 147)**2 + 84.5299*a/(b + 146)**2 + 85.5662*a/(b + 145)**2 + 86.5781*a/(b + 144)**2 + 87.6551*a/(b + 143)**2 + 88.8068*a/(b + 142)**2 + 89.9116*a/(b + 141)**2 + 91.0739*a/(b + 140)**2 + 92.0844*a/(b + 139)**2 + 92.9692*a/(b + 138)**2 + 93.8845*a/(b + 137)**2 + 94.9253*a/(b + 136)**2 + 95.8311*a/(b + 135)**2 + 96.9155*a/(b + 134)**2 + 98.1469*a/(b + 133)**2 + 99.2354*a/(b + 132)**2 + 100.2181*a/(b + 131)**2 + 101.2294*a/(b + 130)**2 + 102.1472*a/(b + 129)**2 + 102.8813*a/(b + 128)**2 + 103.8483*a/(b + 127)**2 + 104.9181*a/(b + 126)**2 + 105.8738*a/(b + 125)**2 + 106.7989*a/(b + 124)**2 + 107.6944*a/(b + 123)**2 + 108.6427*a/(b + 122)**2 + 109.4848*a/(b + 121)**2 + 110.4431*a/(b + 120)**2 + 111.5083*a/(b + 119)**2 + 112.4417*a/(b + 118)**2 + 113.2641*a/(b + 117)**2 + 114.005*a/(b + 116)**2 + 114.7303*a/(b + 115)**2 + 115.3068*a/(b + 114)**2 + 116.1897*a/(b + 113)**2 + 117.0328*a/(b + 112)**2 + 117.7487*a/(b + 111)**2 + 118.5075*a/(b + 110)**2 + 119.2203*a/(b + 109)**2 + 119.93*a/(b + 108)**2 + 120.5433*a/(b + 107)**2 + 121.2973*a/(b + 106)**2 + 122.011*a/(b + 105)**2 + 122.6204*a/(b + 104)**2 + 123.2374*a/(b + 103)**2 + 123.782*a/(b + 102)**2 + 124.3305*a/(b + 101)**2 + 124.8339*a/(b + 100)**2 + 125.546*a/(b + 99)**2 + 126.2705*a/(b + 98)**2 + 126.9573*a/(b + 97)**2 + 127.5432*a/(b + 96)**2 + 127.8976*a/(b + 95)**2 + 128.4008*a/(b + 94)**2 + 128.8708*a/(b + 93)**2 + 129.4517*a/(b + 92)**2 + 130.1223*a/(b + 91)**2 + 130.7129*a/(b + 90)**2 + 131.269*a/(b + 89)**2 + 131.7927*a/(b + 88)**2 + 132.2691*a/(b + 87)**2 + 132.723*a/(b + 86)**2 + 133.2529*a/(b + 85)**2 + 133.8303*a/(b + 84)**2 + 134.3563*a/(b + 83)**2 + 134.8236*a/(b + 82)**2 + 135.27*a/(b + 81)**2 + 135.8396*a/(b + 80)**2 + 136.5358*a/(b + 79)**2 + 137.2792*a/(b + 78)**2 + 138.039*a/(b + 77)**2 + 138.6535*a/(b + 76)**2 + 139.2004*a/(b + 75)**2 + 139.7216*a/(b + 74)**2 + 140.2448*a/(b + 73)**2 + 140.7585*a/(b + 72)**2 + 141.3149*a/(b + 71)**2 + 141.9588*a/(b + 70)**2 + 142.5228*a/(b + 69)**2 + 143.054*a/(b + 68)**2 + 143.5474*a/(b + 67)**2 + 143.9601*a/(b + 66)**2 + 144.365*a/(b + 65)**2 + 144.8117*a/(b + 64)**2 + 145.3034*a/(b + 63)**2 + 145.7576*a/(b + 62)**2 + 146.1592*a/(b + 61)**2 + 146.5039*a/(b + 60)**2 + 146.8269*a/(b + 59)**2 + 147.1702*a/(b + 58)**2 + 147.5893*a/(b + 57)**2 + 148.0186*a/(b + 56)**2 + 148.3868*a/(b + 55)**2 + 148.7116*a/(b + 54)**2 + 149.0554*a/(b + 53)**2 + 149.4015*a/(b + 52)**2 + 149.5855*a/(b + 51)**2 + 149.9106*a/(b + 50)**2 + 150.3214*a/(b + 49)**2 + 150.6605*a/(b + 48)**2 + 150.9845*a/(b + 47)**2 + 151.279*a/(b + 46)**2 + 151.5697*a/(b + 45)**2 + 151.8203*a/(b + 44)**2 + 152.1341*a/(b + 43)**2 + 152.5072*a/(b + 42)**2 + 152.8693*a/(b + 41)**2 + 153.2397*a/(b + 40)**2 + 153.6562*a/(b + 39)**2 + 154.083*a/(b + 38)**2 + 154.4765*a/(b + 37)**2 + 154.9135*a/(b + 36)**2 + 155.3801*a/(b + 35)**2 + 155.8087*a/(b + 34)**2 + 156.2207*a/(b + 33)**2 + 156.6367*a/(b + 32)**2 + 157.0706*a/(b + 31)**2 + 157.4435*a/(b + 30)**2 + 157.7231*a/(b + 29)**2 + 158.0093*a/(b + 28)**2 + 158.2616*a/(b + 27)**2 + 158.4894*a/(b + 26)**2 + 158.705*a/(b + 25)**2 + 158.9541*a/(b + 24)**2 + 159.2423*a/(b + 23)**2 + 159.5139*a/(b + 22)**2 + 159.782*a/(b + 21)**2 + 160.0303*a/(b + 20)**2 + 160.2684*a/(b + 19)**2 + 160.501*a/(b + 18)**2 + 160.6895*a/(b + 17)**2 + 160.8527*a/(b + 16)**2 + 161.0676*a/(b + 15)**2 + 161.293*a/(b + 14)**2 + 161.5044*a/(b + 13)**2 + 161.6961*a/(b + 12)**2 + 161.9033*a/(b + 11)**2 + 162.1101*a/(b + 10)**2 + 162.3177*a/(b + 9)**2 + 162.5724*a/(b + 8)**2 + 162.8291*a/(b + 7)**2 + 163.0325*a/(b + 6)**2 + 163.2091*a/(b + 5)**2 + 163.4268*a/(b + 4)**2 + 163.6402*a/(b + 3)**2 + 163.8079*a/(b + 2)**2 + 164.0044*a/(b + 1)**2 - 1114.162077, 6.4404*a/(b + 90)**2 + 11.3404*a/(b + 89)**2 + 15.1115*a/(b + 88)**2 + 18.4703*a/(b + 87)**2 + 22.3095*a/(b + 86)**2 + 26.7093*a/(b + 85)**2 + 30.5895*a/(b + 84)**2 + 33.5873*a/(b + 83)**2 + 36.2651*a/(b + 82)**2 + 39.1396*a/(b + 81)**2 + 41.0271*a/(b + 80)**2 + 43.9562*a/(b + 79)**2 + 47.1547*a/(b + 78)**2 + 49.8029*a/(b + 77)**2 + 52.3842*a/(b + 76)**2 + 54.8545*a/(b + 75)**2 + 56.4658*a/(b + 74)**2 + 58.6744*a/(b + 73)**2 + 60.8324*a/(b + 72)**2 + 63.0686*a/(b + 71)**2 + 65.1298*a/(b + 70)**2 + 66.9546*a/(b + 69)**2 + 68.598*a/(b + 68)**2 + 70.3053*a/(b + 67)**2 + 71.987*a/(b + 66)**2 + 73.6785*a/(b + 65)**2 + 75.4092*a/(b + 64)**2 + 76.9295*a/(b + 63)**2 + 78.2177*a/(b + 62)**2 + 79.2692*a/(b + 61)**2 + 80.0288*a/(b + 60)**2 + 81.038*a/(b + 59)**2 + 82.1307*a/(b + 58)**2 + 83.4042*a/(b + 57)**2 + 84.5299*a/(b + 56)**2 + 85.5662*a/(b + 55)**2 + 86.5781*a/(b + 54)**2 + 87.6551*a/(b + 53)**2 + 88.8068*a/(b + 52)**2 + 89.9116*a/(b + 51)**2 + 91.0739*a/(b + 50)**2 + 92.0844*a/(b + 49)**2 + 92.9692*a/(b + 48)**2 + 93.8845*a/(b + 47)**2 + 94.9253*a/(b + 46)**2 + 95.8311*a/(b + 45)**2 + 96.9155*a/(b + 44)**2 + 98.1469*a/(b + 43)**2 + 99.2354*a/(b + 42)**2 + 100.2181*a/(b + 41)**2 + 101.2294*a/(b + 40)**2 + 102.1472*a/(b + 39)**2 + 102.8813*a/(b + 38)**2 + 103.8483*a/(b + 37)**2 + 104.9181*a/(b + 36)**2 + 105.8738*a/(b + 35)**2 + 106.7989*a/(b + 34)**2 + 107.6944*a/(b + 33)**2 + 108.6427*a/(b + 32)**2 + 109.4848*a/(b + 31)**2 + 110.4431*a/(b + 30)**2 + 111.5083*a/(b + 29)**2 + 112.4417*a/(b + 28)**2 + 113.2641*a/(b + 27)**2 + 114.005*a/(b + 26)**2 + 114.7303*a/(b + 25)**2 + 115.3068*a/(b + 24)**2 + 116.1897*a/(b + 23)**2 + 117.0328*a/(b + 22)**2 + 117.7487*a/(b + 21)**2 + 118.5075*a/(b + 20)**2 + 119.2203*a/(b + 19)**2 + 119.93*a/(b + 18)**2 + 120.5433*a/(b + 17)**2 + 121.2973*a/(b + 16)**2 + 122.011*a/(b + 15)**2 + 122.6204*a/(b + 14)**2 + 123.2374*a/(b + 13)**2 + 123.782*a/(b + 12)**2 + 124.3305*a/(b + 11)**2 + 124.8339*a/(b + 10)**2 + 125.546*a/(b + 9)**2 + 126.2705*a/(b + 8)**2 + 126.9573*a/(b + 7)**2 + 127.5432*a/(b + 6)**2 + 127.8976*a/(b + 5)**2 + 128.4008*a/(b + 4)**2 + 128.8708*a/(b + 3)**2 + 129.4517*a/(b + 2)**2 + 130.1223*a/(b + 1)**2 - 676.991313]

list1=[1,1]
solved = root(solve_function, list1)
print(solved)